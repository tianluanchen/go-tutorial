import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o as c,c as i,a as s,d as e,w as t,b as n,e as l}from"./app-9da01d16.js";const u={},d=l(`<h1 id="_8-2-测试键值对是否存在及删除元素" tabindex="-1"><a class="header-anchor" href="#_8-2-测试键值对是否存在及删除元素" aria-hidden="true">#</a> 8.2 测试键值对是否存在及删除元素</h1><p>测试 <code>map1</code> 中是否存在 <code>key1</code>：</p><p>在例子 8.1 中，我们已经见过可以使用 <code>val1 = map1[key1]</code> 的方法获取 <code>key1</code> 对应的值 <code>val1</code>。如果 <code>map</code> 中不存在 <code>key1</code>，<code>val1</code> 就是一个值类型的空值。</p><p>这就会给我们带来困惑了：现在我们没法区分到底是 <code>key1</code> 不存在还是它对应的 <code>value</code> 就是空值。</p><p>为了解决这个问题，我们可以这么用：<code>val1, isPresent = map1[key1]</code></p><p><code>isPresent</code> 返回一个 <code>bool</code> 值：如果 <code>key1</code> 存在于 <code>map1</code>，<code>val1</code> 就是 <code>key1</code> 对应的 <code>value</code> 值，并且 <code>isPresent</code> 为 <code>true</code>；如果 <code>key1</code> 不存在，<code>val1</code> 就是一个空值，并且 <code>isPresent</code> 会返回 <code>false</code>。</p><p>如果你只是想判断某个 <code>key</code> 是否存在而不关心它对应的值到底是多少，你可以这么做：</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token boolean">_</span><span class="token punctuation">,</span> ok <span class="token operator">:=</span> map1<span class="token punctuation">[</span>key1<span class="token punctuation">]</span> <span class="token comment">// 如果key1存在则ok == true，否则ok为false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>或者和 <code>if</code> 混合使用：</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">if</span> <span class="token boolean">_</span><span class="token punctuation">,</span> ok <span class="token operator">:=</span> map1<span class="token punctuation">[</span>key1<span class="token punctuation">]</span><span class="token punctuation">;</span> ok <span class="token punctuation">{</span>
	<span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>从 <code>map1</code> 中删除 <code>key1</code>：</p><p>直接 <code>delete(map1, key1)</code> 就可以。</p><p>如果 <code>key1</code> 不存在，该操作不会产生错误。</p><p>示例 8.4 <a href="examples/chapter_8/map_testelement.go">map_testelement.go</a></p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">package</span> main
<span class="token keyword">import</span> <span class="token string">&quot;fmt&quot;</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">var</span> value <span class="token builtin">int</span>
	<span class="token keyword">var</span> isPresent <span class="token builtin">bool</span>

	map1 <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">)</span>
	map1<span class="token punctuation">[</span><span class="token string">&quot;New Delhi&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">55</span>
	map1<span class="token punctuation">[</span><span class="token string">&quot;Beijing&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">20</span>
	map1<span class="token punctuation">[</span><span class="token string">&quot;Washington&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">25</span>
	value<span class="token punctuation">,</span> isPresent <span class="token operator">=</span> map1<span class="token punctuation">[</span><span class="token string">&quot;Beijing&quot;</span><span class="token punctuation">]</span>
	<span class="token keyword">if</span> isPresent <span class="token punctuation">{</span>
		fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;The value of \\&quot;Beijing\\&quot; in map1 is: %d\\n&quot;</span><span class="token punctuation">,</span> value<span class="token punctuation">)</span>
	<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
		fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;map1 does not contain Beijing&quot;</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>

	value<span class="token punctuation">,</span> isPresent <span class="token operator">=</span> map1<span class="token punctuation">[</span><span class="token string">&quot;Paris&quot;</span><span class="token punctuation">]</span>
	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Is \\&quot;Paris\\&quot; in map1 ?: %t\\n&quot;</span><span class="token punctuation">,</span> isPresent<span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Value is: %d\\n&quot;</span><span class="token punctuation">,</span> value<span class="token punctuation">)</span>

	<span class="token comment">// delete an item:</span>
	<span class="token function">delete</span><span class="token punctuation">(</span>map1<span class="token punctuation">,</span> <span class="token string">&quot;Washington&quot;</span><span class="token punctuation">)</span>
	value<span class="token punctuation">,</span> isPresent <span class="token operator">=</span> map1<span class="token punctuation">[</span><span class="token string">&quot;Washington&quot;</span><span class="token punctuation">]</span>
	<span class="token keyword">if</span> isPresent <span class="token punctuation">{</span>
		fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;The value of \\&quot;Washington\\&quot; in map1 is: %d\\n&quot;</span><span class="token punctuation">,</span> value<span class="token punctuation">)</span>
	<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
		fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;map1 does not contain Washington&quot;</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出结果：</p><pre><code>The value of &quot;Beijing&quot; in map1 is: 20
Is &quot;Paris&quot; in map1 ?: false
Value is: 0
map1 does not contain Washington
</code></pre><h2 id="链接" tabindex="-1"><a class="header-anchor" href="#链接" aria-hidden="true">#</a> 链接</h2>`,18);function r(k,m){const a=p("RouterLink");return c(),i("div",null,[d,s("ul",null,[s("li",null,[e(a,{to:"/the-way-to-go/directory.html"},{default:t(()=>[n("目录")]),_:1})]),s("li",null,[n("上一节："),e(a,{to:"/the-way-to-go/08.1.html"},{default:t(()=>[n("声明、初始化和 make")]),_:1})]),s("li",null,[n("下一节："),e(a,{to:"/the-way-to-go/08.3.html"},{default:t(()=>[n("for-range 的配套用法")]),_:1})])])])}const g=o(u,[["render",r],["__file","08.2.html.vue"]]);export{g as default};
