import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{r,o as i,c as s,a as e,d as l,w as a,b as t}from"./app-9da01d16.js";const d={},c=e("h1",{id:"_13-6-小结",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_13-6-小结","aria-hidden":"true"},"#"),t(" 13.6 小结")],-1),_=e("p",null,"这一章我们主要介绍了如何实现一个基础的Go语言框架，框架包含有路由设计，由于Go内置的http包中路由的一些不足点，我们设计了动态路由规则，然后介绍了MVC模式中的Controller设计，controller实现了REST的实现，这个主要思路来源于tornado框架，然后设计实现了模板的layout以及自动化渲染等技术，主要采用了Go内置的模板引擎，最后我们介绍了一些辅助的日志、配置等信息的设计，通过这些设计我们实现了一个基础的框架beego，目前该框架已经开源在GitHub，最后我们通过beego实现了一个博客系统，通过实例代码详细的展现了如何快速的开发一个站点。",-1),u=e("h2",{id:"links",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#links","aria-hidden":"true"},"#"),t(" links")],-1);function h(p,f){const o=r("RouterLink");return i(),s("div",null,[c,_,u,e("ul",null,[e("li",null,[l(o,{to:"/build-web-app/preface.html"},{default:a(()=>[t("目录")]),_:1})]),e("li",null,[t("上一章: "),l(o,{to:"/build-web-app/13.5.html"},{default:a(()=>[t("实现博客的增删改")]),_:1})]),e("li",null,[t("下一节: "),l(o,{to:"/build-web-app/14.0.html"},{default:a(()=>[t("扩展Web框架")]),_:1})])])])}const k=n(d,[["render",h],["__file","13.6.html.vue"]]);export{k as default};
