import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{r,o as c,c as d,a as t,b as e,d as l,w as a}from"./app-9da01d16.js";const s={},_=t("h1",{id:"_16-8-误用协程和通道",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#_16-8-误用协程和通道","aria-hidden":"true"},"#"),e(" 16.8 误用协程和通道")],-1),h=t("p",null,[e("但是，如果你使用 "),t("code",null,"break"),e("、"),t("code",null,"return"),e(" 或者 "),t("code",null,"panic()"),e(" 去跳出一个循环，很有可能会导致内存溢出，因为协程正处理某些事情而被阻塞。在实际代码中，通常仅需写一个简单的过程式循环即可。"),t("strong",null,"当且仅当代码中并发执行非常重要，才使用协程和通道。")],-1),i=t("h2",{id:"链接",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#链接","aria-hidden":"true"},"#"),e(" 链接")],-1);function u(f,m){const o=r("RouterLink");return c(),d("div",null,[_,t("p",null,[e("由于教学需要和对协程的工作原理有一个直观的了解，在"),l(o,{to:"/the-way-to-go/14.0.html"},{default:a(()=>[e("第 14 章")]),_:1}),e(" 使用了一些简单的算法，举例说明了协程和通道的使用，例如生产者或者迭代器。在实际应用中，你不需要并发执行，或者你不需要关注协程和通道的开销，在大多数情况下，通过栈传递参数会更有效率。")]),h,i,t("ul",null,[t("li",null,[l(o,{to:"/the-way-to-go/directory.html"},{default:a(()=>[e("目录")]),_:1})]),t("li",null,[e("上一节："),l(o,{to:"/the-way-to-go/16.7.html"},{default:a(()=>[e("使用值类型时误用指针")]),_:1})]),t("li",null,[e("下一节："),l(o,{to:"/the-way-to-go/16.9.html"},{default:a(()=>[e("闭包和协程的使用")]),_:1})])])])}const w=n(s,[["render",u],["__file","16.8.html.vue"]]);export{w as default};
