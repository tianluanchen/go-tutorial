const t=JSON.parse('{"key":"v-c18e81b0","path":"/the-way-to-go/12.6.html","title":"12.6 用切片读写文件","lang":"zh-CN","frontmatter":{"description":"切片提供了 Go 中处理 I/O 缓冲的标准方式，下面 cat 函数的第二版中，在一个切片缓冲内使用无限 for 循环（直到文件尾部 EOF）读取文件，并写入到标准输出（os.Stdout）。 上面的代码来自于 cat2.go (examples/chapter_12/cat2.go)，使用了 os 包中的 os.File 和 Read 方法；cat2...","head":[["meta",{"property":"og:url","content":"https://tianluanchen.github.io/go-tutorial/the-way-to-go/12.6.html"}],["meta",{"property":"og:site_name","content":"Go 优选教程"}],["meta",{"property":"og:title","content":"12.6 用切片读写文件"}],["meta",{"property":"og:description","content":"切片提供了 Go 中处理 I/O 缓冲的标准方式，下面 cat 函数的第二版中，在一个切片缓冲内使用无限 for 循环（直到文件尾部 EOF）读取文件，并写入到标准输出（os.Stdout）。 上面的代码来自于 cat2.go (examples/chapter_12/cat2.go)，使用了 os 包中的 os.File 和 Read 方法；cat2..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-16T16:30:25.000Z"}],["meta",{"property":"article:modified_time","content":"2023-09-16T16:30:25.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"12.6 用切片读写文件\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-09-16T16:30:25.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"链接","slug":"链接","link":"#链接","children":[]}],"git":{"updatedTime":1694881825000,"contributors":[{"name":"tianluanchen","email":"zxl-life@outlook.com","commits":1}]},"readingTime":{"minutes":1.01,"words":302},"filePathRelative":"the-way-to-go/12.6.md","autoDesc":true,"excerpt":""}');export{t as data};
