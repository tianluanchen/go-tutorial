import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{r as c,o as l,c as d,a as t,d as a,w as r,b as e,e as s}from"./app-9da01d16.js";const i={},h=s('<h1 id="_7-0-数组与切片" tabindex="-1"><a class="header-anchor" href="#_7-0-数组与切片" aria-hidden="true">#</a> 7.0 数组与切片</h1><p>这章我们开始剖析 <strong>集合</strong>，它是可以包含大量条目 (item) 的数据结构，例如数组、切片和 <code>map</code>。从这看到 Go 明显受到 Python 的影响。</p><p>以 <code>[]</code> 符号标识的数组类型几乎在所有的编程语言中都是一个基本主力。Go 语言中的数组也是类似的，只是有一些特点。Go 没有 C 那么灵活，但是拥有切片 (slice) 类型。这是一种建立在 Go 语言数组类型之上的抽象，要想理解切片我们必须先理解数组。数组有特定的用处，但是却有一些呆板，所以在 Go 语言的代码里并不是特别常见。相对的，切片确实随处可见的。它们构建在数组之上并且提供更强大的能力和便捷。</p><h2 id="链接" tabindex="-1"><a class="header-anchor" href="#链接" aria-hidden="true">#</a> 链接</h2>',4);function _(u,m){const o=c("RouterLink");return l(),d("div",null,[h,t("ul",null,[t("li",null,[a(o,{to:"/the-way-to-go/directory.html"},{default:r(()=>[e("目录")]),_:1})]),t("li",null,[e("上一节："),a(o,{to:"/the-way-to-go/06.12.html"},{default:r(()=>[e("通过内存缓存来提升性能")]),_:1})]),t("li",null,[e("下一节："),a(o,{to:"/the-way-to-go/07.1.html"},{default:r(()=>[e("声明和初始化")]),_:1})])])])}const x=n(i,[["render",_],["__file","07.0.html.vue"]]);export{x as default};
