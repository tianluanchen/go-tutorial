const t=JSON.parse('{"key":"v-b9962376","path":"/the-way-to-go/17.4.html","title":"17.4 运算符模式和接口","lang":"zh-CN","frontmatter":{"description":"运算符是一元或二元函数，它返回一个新对象而不修改其参数，类似 C++ 中的 + 和 ，特殊的中缀运算符（+，`-`， 等）可以被重载以支持类似数学运算的语法。但除了一些特殊情况，Go 语言并不支持运算符重载：为了克服该限制，运算符必须由函数来模拟。既然 Go 同时支持面向过程和面向对象编程，我们有两种选择： 17.4.1 函数作为运算符 运算符由包级别...","head":[["meta",{"property":"og:url","content":"https://tianluanchen.github.io/go-tutorial/the-way-to-go/17.4.html"}],["meta",{"property":"og:site_name","content":"Go 优选教程"}],["meta",{"property":"og:title","content":"17.4 运算符模式和接口"}],["meta",{"property":"og:description","content":"运算符是一元或二元函数，它返回一个新对象而不修改其参数，类似 C++ 中的 + 和 ，特殊的中缀运算符（+，`-`， 等）可以被重载以支持类似数学运算的语法。但除了一些特殊情况，Go 语言并不支持运算符重载：为了克服该限制，运算符必须由函数来模拟。既然 Go 同时支持面向过程和面向对象编程，我们有两种选择： 17.4.1 函数作为运算符 运算符由包级别..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-16T16:30:25.000Z"}],["meta",{"property":"article:modified_time","content":"2023-09-16T16:30:25.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"17.4 运算符模式和接口\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-09-16T16:30:25.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"17.4.1 函数作为运算符","slug":"_17-4-1-函数作为运算符","link":"#_17-4-1-函数作为运算符","children":[]},{"level":2,"title":"17.4.2 方法作为运算符","slug":"_17-4-2-方法作为运算符","link":"#_17-4-2-方法作为运算符","children":[]},{"level":2,"title":"17.4.3 使用接口","slug":"_17-4-3-使用接口","link":"#_17-4-3-使用接口","children":[]},{"level":2,"title":"链接","slug":"链接","link":"#链接","children":[]}],"git":{"updatedTime":1694881825000,"contributors":[{"name":"tianluanchen","email":"zxl-life@outlook.com","commits":1}]},"readingTime":{"minutes":3.55,"words":1066},"filePathRelative":"the-way-to-go/17.4.md","autoDesc":true,"excerpt":""}');export{t as data};
