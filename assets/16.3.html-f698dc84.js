import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o as c,c as l,a as s,d as e,w as t,b as n,e as i}from"./app-9da01d16.js";const u={},r=i(`<h1 id="_16-3-发生错误时使用-defer-关闭一个文件" tabindex="-1"><a class="header-anchor" href="#_16-3-发生错误时使用-defer-关闭一个文件" aria-hidden="true">#</a> 16.3 发生错误时使用 defer 关闭一个文件</h1><p>如果你在一个 <code>for</code> 循环内部处理一系列文件，你需要使用 <code>defer</code> 确保文件在处理完毕后被关闭，例如：</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> file <span class="token operator">:=</span> <span class="token keyword">range</span> files <span class="token punctuation">{</span>
    <span class="token keyword">if</span> f<span class="token punctuation">,</span> err <span class="token operator">=</span> os<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 这是错误的方式，当循环结束时文件没有关闭</span>
    <span class="token keyword">defer</span> f<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment">// 对文件进行操作</span>
    f<span class="token punctuation">.</span><span class="token function">Process</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>但是在循环内结尾处的 <code>defer</code> 没有执行，所以文件一直没有关闭！垃圾回收机制可能会自动关闭文件，但是这会产生一个错误，更好的做法是：</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> file <span class="token operator">:=</span> <span class="token keyword">range</span> files <span class="token punctuation">{</span>
    <span class="token keyword">if</span> f<span class="token punctuation">,</span> err <span class="token operator">=</span> os<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 对文件进行操作</span>
    f<span class="token punctuation">.</span><span class="token function">Process</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
    <span class="token comment">// 关闭文件</span>
    f<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
 <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong><code>defer</code> 仅在函数返回时才会执行，在循环内的结尾或其他一些有限范围的代码内不会执行。</strong></p><h2 id="链接" tabindex="-1"><a class="header-anchor" href="#链接" aria-hidden="true">#</a> 链接</h2>`,7);function d(k,v){const a=p("RouterLink");return c(),l("div",null,[r,s("ul",null,[s("li",null,[e(a,{to:"/the-way-to-go/directory.html"},{default:t(()=>[n("目录")]),_:1})]),s("li",null,[n("上一节："),e(a,{to:"/the-way-to-go/16.2.html"},{default:t(()=>[n("误用字符串")]),_:1})]),s("li",null,[n("下一节："),e(a,{to:"/the-way-to-go/16.4.html"},{default:t(()=>[n("何时使用 new() 和 make()")]),_:1})])])])}const b=o(u,[["render",d],["__file","16.3.html.vue"]]);export{b as default};
