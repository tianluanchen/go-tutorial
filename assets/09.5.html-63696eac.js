const t=JSON.parse('{"key":"v-3f309cbe","path":"/the-way-to-go/09.5.html","title":"9.5 自定义包和可见性","lang":"zh-CN","frontmatter":{"description":"包是 Go 语言中代码组织和代码编译的主要方式。关于它们的很多基本信息已经在 4.2 章节中给出，最引人注目的便是可见性。现在我们来看看具体如何来使用自己写的包。在下一节，我们将回顾一些标准库中的包，自定义的包和标准库以外的包。 当写自己包的时候，要使用短小的不含有 _（下划线）的小写单词来为文件命名。这里有个简单例子来说明包是如何相互调用以及可见性是...","head":[["meta",{"property":"og:url","content":"https://tianluanchen.github.io/go-tutorial/the-way-to-go/09.5.html"}],["meta",{"property":"og:site_name","content":"Go 优选教程"}],["meta",{"property":"og:title","content":"9.5 自定义包和可见性"}],["meta",{"property":"og:description","content":"包是 Go 语言中代码组织和代码编译的主要方式。关于它们的很多基本信息已经在 4.2 章节中给出，最引人注目的便是可见性。现在我们来看看具体如何来使用自己写的包。在下一节，我们将回顾一些标准库中的包，自定义的包和标准库以外的包。 当写自己包的时候，要使用短小的不含有 _（下划线）的小写单词来为文件命名。这里有个简单例子来说明包是如何相互调用以及可见性是..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-16T16:30:25.000Z"}],["meta",{"property":"article:modified_time","content":"2023-09-16T16:30:25.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"9.5 自定义包和可见性\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-09-16T16:30:25.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"链接","slug":"链接","link":"#链接","children":[]}],"git":{"updatedTime":1694881825000,"contributors":[{"name":"tianluanchen","email":"zxl-life@outlook.com","commits":1}]},"readingTime":{"minutes":5.44,"words":1633},"filePathRelative":"the-way-to-go/09.5.md","autoDesc":true,"excerpt":""}');export{t as data};
