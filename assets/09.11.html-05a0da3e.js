import{_ as c}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o as u,c as i,a as s,b as n,d as a,w as e,e as l}from"./app-9da01d16.js";const r={},d=s("h1",{id:"_9-11-在-go-程序中使用外部库",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_9-11-在-go-程序中使用外部库","aria-hidden":"true"},"#"),n(" 9.11 在 Go 程序中使用外部库")],-1),k=s("p",null,"（本节我们将创建一个 Web 应用和它的 Google App Engine 版本，在第 19 和 21 章分别说明，当你阅读到这些章节时可以再回到这个例子。)",-1),v=s("p",null,"当开始一个新项目或增加新的功能到现有的项目，你可以通过在应用程序中使用已经存在的库来节省开发时间。为了做到这一点，你必须理解库的 API（应用编程接口），那就是：库中有哪些方法可以调用，如何调用。你可能没有这个库的源代码，但作者肯定有记载的 API 以及详细介绍了如何使用它。",-1),g={href:"http://goo.gl/",target:"_blank",rel:"noopener noreferrer"},m={href:"http://www.destandaard.be",target:"_blank",rel:"noopener noreferrer"},h={href:"http://goo.gl/O9SUO",target:"_blank",rel:"noopener noreferrer"},b={href:"http://code.google.com/apis/urlshortener/",target:"_blank",rel:"noopener noreferrer"},f=s("p",null,"谷歌将这项技术提供给其他开发者，我们可以在我们自己的应用程序中调用 API （释放到指定的限制）。他们也生成了一个 Go 语言客户端库使调用变得更容易。",-1),_={href:"http://code.google.com/p/google-api-go-client/",target:"_blank",rel:"noopener noreferrer"},q=l(`<p>下载并安装 Go 客户端库:<br> 将通过 go install 实现。但是首先要验证环境变量中是否含有 <code>GOPATH</code> 变量，因为外部源码将被下载到 <code>$GOPATH/src</code> 目录下并被安装到 <code>$GOPATH/PKG/&quot;machine_arch&quot;/</code> 目录下。</p><p>我们将通过在终端调用以下命令来安装 API:</p><pre><code>go install google.golang.org/api/urlshortener/v1
</code></pre><p>go install 将下载源码，编译并安装包</p><p>使用 urlshortener 服务的 web 程序:<br> 现在我们可以通过导入并赋予别名来使用已安装的包：</p><pre><code>import  &quot;google.golang.org/api/urlshortener/v1&quot;
</code></pre>`,6),w=s("code",null,"template",-1),y=s("code",null,"root()",-1),U=s("code",null,"short()",-1),x=s("code",null,"long()",-1),S=l(`<p>要调用 <code>urlshortener</code> 接口必须先通过 <code>http</code> 包中的默认客户端创建一个服务实例 <code>urlshortenerSvc</code>：</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>urlshortenerSvc<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> urlshortener<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>DefaultClient<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>我们通过调用服务中的 <code>Url.Insert</code> 中的 <code>Do</code> 方法传入包含长地址的 <code>Url</code> 数据结构从而获取短地址：</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>url<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> urlshortenerSvc<span class="token punctuation">.</span>Url<span class="token punctuation">.</span><span class="token function">Insert</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>urlshortener<span class="token punctuation">.</span>Url<span class="token punctuation">{</span>LongUrl<span class="token punctuation">:</span> longUrl<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Do</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>返回 <code>url</code> 的 <code>Id</code> 便是我们需要的短地址。</p><p>我们通过调用服务中的 <code>Url.Get</code> 中的 <code>Do</code> 方法传入包含短地址的 Url 数据结构从而获取长地址：</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>url<span class="token punctuation">,</span> <span class="token builtin">error</span> <span class="token operator">:=</span> urlshortenerSvc<span class="token punctuation">.</span>Url<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span>shwortUrl<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Do</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>返回的长地址便是转换前的原始地址。</p><p>示例 9.9 <a href="examples/chapter_9/use_urlshortener.go">urlshortener.go</a></p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
	 <span class="token string">&quot;fmt&quot;</span>
	 <span class="token string">&quot;net/http&quot;</span>
	 <span class="token string">&quot;text/template&quot;</span>

	 <span class="token string">&quot;google.golang.org/api/urlshortener/v1&quot;</span>
<span class="token punctuation">)</span>
<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	 http<span class="token punctuation">.</span><span class="token function">HandleFunc</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">,</span> root<span class="token punctuation">)</span>
	 http<span class="token punctuation">.</span><span class="token function">HandleFunc</span><span class="token punctuation">(</span><span class="token string">&quot;/short&quot;</span><span class="token punctuation">,</span> short<span class="token punctuation">)</span>
	 http<span class="token punctuation">.</span><span class="token function">HandleFunc</span><span class="token punctuation">(</span><span class="token string">&quot;/long&quot;</span><span class="token punctuation">,</span> long<span class="token punctuation">)</span>

	 http<span class="token punctuation">.</span><span class="token function">ListenAndServe</span><span class="token punctuation">(</span><span class="token string">&quot;localhost:8080&quot;</span><span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">// the template used to show the forms and the results web page to the user</span>
<span class="token keyword">var</span> rootHtmlTmpl <span class="token operator">=</span> template<span class="token punctuation">.</span><span class="token function">Must</span><span class="token punctuation">(</span>template<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">&quot;rootHtml&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Parse</span><span class="token punctuation">(</span><span class="token string">\`
&lt;html&gt;&lt;body&gt;
&lt;h1&gt;URL SHORTENER&lt;/h1&gt;
{{if .}}{{.}}&lt;br /&gt;&lt;br /&gt;{{end}}
&lt;form action=&quot;/short&quot; type=&quot;POST&quot;&gt;
Shorten this: &lt;input type=&quot;text&quot; name=&quot;longUrl&quot; /&gt;
&lt;input type=&quot;submit&quot; value=&quot;Give me the short URL&quot; /&gt;
&lt;/form&gt;
&lt;br /&gt;
&lt;form action=&quot;/long&quot; type=&quot;POST&quot;&gt;
Expand this: http://goo.gl/&lt;input type=&quot;text&quot; name=&quot;shortUrl&quot; /&gt;
&lt;input type=&quot;submit&quot; value=&quot;Give me the long URL&quot; /&gt;
&lt;/form&gt;
&lt;/body&gt;&lt;/html&gt;
\`</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">func</span> <span class="token function">root</span><span class="token punctuation">(</span>w http<span class="token punctuation">.</span>ResponseWriter<span class="token punctuation">,</span> r <span class="token operator">*</span>http<span class="token punctuation">.</span>Request<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	rootHtmlTmpl<span class="token punctuation">.</span><span class="token function">Execute</span><span class="token punctuation">(</span>w<span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">func</span> <span class="token function">short</span><span class="token punctuation">(</span>w http<span class="token punctuation">.</span>ResponseWriter<span class="token punctuation">,</span> r <span class="token operator">*</span>http<span class="token punctuation">.</span>Request<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	 longUrl <span class="token operator">:=</span> r<span class="token punctuation">.</span><span class="token function">FormValue</span><span class="token punctuation">(</span><span class="token string">&quot;longUrl&quot;</span><span class="token punctuation">)</span>
	 urlshortenerSvc<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> urlshortener<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>DefaultClient<span class="token punctuation">)</span>
	 url<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> urlshortenerSvc<span class="token punctuation">.</span>Url<span class="token punctuation">.</span><span class="token function">Insert</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>urlshortener<span class="token punctuation">.</span>Url<span class="token punctuation">{</span>LongUrl<span class="token punctuation">:</span>
	 longUrl<span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Do</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	 rootHtmlTmpl<span class="token punctuation">.</span><span class="token function">Execute</span><span class="token punctuation">(</span>w<span class="token punctuation">,</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">&quot;Shortened version of %s is : %s&quot;</span><span class="token punctuation">,</span>
	 longUrl<span class="token punctuation">,</span> url<span class="token punctuation">.</span>Id<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">long</span><span class="token punctuation">(</span>w http<span class="token punctuation">.</span>ResponseWriter<span class="token punctuation">,</span> r <span class="token operator">*</span>http<span class="token punctuation">.</span>Request<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	 shortUrl <span class="token operator">:=</span> <span class="token string">&quot;http://goo.gl/&quot;</span> <span class="token operator">+</span> r<span class="token punctuation">.</span><span class="token function">FormValue</span><span class="token punctuation">(</span><span class="token string">&quot;shortUrl&quot;</span><span class="token punctuation">)</span>
	 urlshortenerSvc<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> urlshortener<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>DefaultClient<span class="token punctuation">)</span>
	 url<span class="token punctuation">,</span> err <span class="token operator">:=</span> urlshortenerSvc<span class="token punctuation">.</span>Url<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span>shortUrl<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Do</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	 <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		 fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;error: %v&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
		 <span class="token keyword">return</span>

	 <span class="token punctuation">}</span>
	 rootHtmlTmpl<span class="token punctuation">.</span><span class="token function">Execute</span><span class="token punctuation">(</span>w<span class="token punctuation">,</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">&quot;Longer version of %s is : %s&quot;</span><span class="token punctuation">,</span>
	 shortUrl<span class="token punctuation">,</span> url<span class="token punctuation">.</span>LongUrl<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行这段代码：</p><pre><code>go run urlshortener.go
</code></pre><p>通过浏览 <code>http://localhost:8080/</code> 的页面来测试。</p><p>为了代码的简洁我们并没有检测返回的错误状态，但是在真实的生产环境的应用中一定要做检测。</p><p>将应用放入 Google App Engine，我们只需要在之前的代码中作出如下改变：</p><pre><code>package main -&gt; package urlshort
func main() -&gt; func init()
</code></pre><p>创建一个和包同名的目录 <code>urlshort</code>，并将以下两个安装目录复制到这个目录：</p><pre><code>google.golang.org/api/urlshortener
google.golang.org/api/googleapi
</code></pre><p>此外还要配置下配置文件 <code>app.yaml</code>，内容如下：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">application</span><span class="token punctuation">:</span> urlshort
<span class="token key atrule">version</span><span class="token punctuation">:</span> 0<span class="token punctuation">-</span>1<span class="token punctuation">-</span>test
<span class="token key atrule">runtime</span><span class="token punctuation">:</span> go
<span class="token key atrule">api_version</span><span class="token punctuation">:</span> <span class="token number">3</span>
<span class="token key atrule">handlers</span><span class="token punctuation">:</span>
<span class="token punctuation">-</span> <span class="token key atrule">url</span><span class="token punctuation">:</span> /.*
<span class="token key atrule">script</span><span class="token punctuation">:</span> _go_app
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>现在你可以到你的项目目录并在终端运行：<code>dev_appserver.py urlshort</code></p>`,21),G={href:"http://localhost:8080",target:"_blank",rel:"noopener noreferrer"},R=s("h2",{id:"链接",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#链接","aria-hidden":"true"},"#"),n(" 链接")],-1);function L(P,I){const t=p("ExternalLinkIcon"),o=p("RouterLink");return u(),i("div",null,[d,k,v,s("p",null,[n("作为一个例子，我们将使用谷歌的 API 的 urlshortener 编写一个小程序：你可以尝试一下在 "),s("a",g,[n("http://goo.gl/"),a(t)]),n(' 输入一个像 "'),s("a",m,[n("http://www.destandaard.be"),a(t)]),n('" 这样的 URL，你会看到一个像 "'),s("a",h,[n("http://goo.gl/O9SUO"),a(t)]),n('" 这样更短的 URL 返回，也就是说，在 Twitter 之类的服务中这是非常容易嵌入的。谷歌 urlshortener 服务的文档可以在 "'),s("a",b,[n("http://code.google.com/apis/urlshortener/"),a(t)]),n('" 找到。('),a(o,{to:"/the-way-to-go/19.0.html"},{default:e(()=>[n("第 19 章")]),_:1}),n("，我们将开发自己版本的 urlshortener)。")]),f,s("p",null,[n("备注：谷歌让通过使用 Google API Go 客户端服务的开发者生活变得更简单，Go 客户端程序自动生成于 Google 库的 JSON 描述。更多详情在 "),s("a",_,[n("项目页面"),a(t)]),n(" 查看。")]),q,s("p",null,[n("现在我们写一个 Web 应用（参见"),a(o,{to:"/the-way-to-go/15.4.html"},{default:e(()=>[n("第 15 章 4-8 节")]),_:1}),n("）通过表单实现短地址和长地址的相互转换。我们将使用 "),w,n(" 包并写三个处理函数："),y,n(" 函数通过执行表单模板来展示表单，"),U,n(" 函数将长地址转换为短地址，"),x,n(" 函数逆向转换。")]),S,s("p",null,[n("在浏览器打开你的 Web应用："),s("a",G,[n("http://localhost:8080"),a(t)]),n("。")]),R,s("ul",null,[s("li",null,[a(o,{to:"/the-way-to-go/directory.html"},{default:e(()=>[n("目录")]),_:1})]),s("li",null,[n("上一节："),a(o,{to:"/the-way-to-go/09.10.html"},{default:e(()=>[n("Go 的外部包和项目")]),_:1})]),s("li",null,[n("下一章："),a(o,{to:"/the-way-to-go/10.0.html"},{default:e(()=>[n("结构 (struct) 与方法 (method)")]),_:1})])])])}const T=c(r,[["render",L],["__file","09.11.html.vue"]]);export{T as default};
