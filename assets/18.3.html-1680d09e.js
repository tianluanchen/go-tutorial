import{_ as s}from"./plugin-vue_export-helper-c27b6911.js";import{r as c,o as d,c as l,a,d as t,w as n,b as e,e as r}from"./app-9da01d16.js";const p={},i=r(`<h1 id="_18-3-映射" tabindex="-1"><a class="header-anchor" href="#_18-3-映射" aria-hidden="true">#</a> 18.3 映射</h1><p>创建： <code>map1 := make(map[keytype]valuetype)</code></p><p>初始化： <code>map1 := map[string]int{&quot;one&quot;: 1, &quot;two&quot;: 2}</code></p><p>（1）如何使用 <code>for</code> 或者 <code>for-range</code> 遍历一个映射：</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">for</span> key<span class="token punctuation">,</span> value <span class="token operator">:=</span> <span class="token keyword">range</span> map1 <span class="token punctuation">{</span>
…
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>（2）如何在一个映射中检测键 <code>key1</code> 是否存在：</p><p><code>val1, isPresent = map1[key1]</code></p><p>返回值：键 <code>key1</code> 对应的值或者 <code>0</code>，<code>true</code> 或者 <code>false</code></p><p>（3）如何在映射中删除一个键：<code>delete(map1, key1)</code></p><h2 id="链接" tabindex="-1"><a class="header-anchor" href="#链接" aria-hidden="true">#</a> 链接</h2>`,10);function u(m,h){const o=c("RouterLink");return d(),l("div",null,[i,a("ul",null,[a("li",null,[t(o,{to:"/the-way-to-go/directory.html"},{default:n(()=>[e("目录")]),_:1})]),a("li",null,[e("上一节："),t(o,{to:"/the-way-to-go/18.2.html"},{default:n(()=>[e("数组和切片")]),_:1})]),a("li",null,[e("下一节："),t(o,{to:"/the-way-to-go/18.4.html"},{default:n(()=>[e("结构体")]),_:1})])])])}const f=s(p,[["render",u],["__file","18.3.html.vue"]]);export{f as default};
