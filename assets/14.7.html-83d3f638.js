import{_ as r}from"./plugin-vue_export-helper-c27b6911.js";import{r as n,o as i,c as l,a as e,d as a,w as s,b as o}from"./app-9da01d16.js";const c={},d=e("h1",{id:"_14-7-小结",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_14-7-小结","aria-hidden":"true"},"#"),o(" 14.7 小结")],-1),p=e("p",null,"这一章主要阐述了如何基于beego框架进行扩展，这包括静态文件的支持，静态文件主要讲述了如何利用beego进行快速的网站开发，利用bootstrap搭建漂亮的站点；第二小结讲解了如何在beego中集成sessionManager，方便用户在利用beego的时候快速的使用session；第三小结介绍了表单和验证，基于Go语言的struct的定义使得我们在开发Web的过程中从重复的工作中解放出来，而且加入了验证之后可以尽量做到数据安全，第四小结介绍了用户认证，用户认证主要有三方面的需求，http basic和http digest认证，第三方认证，自定义认证，通过代码演示了如何利用现有的第三方包集成到beego应用中来实现这些认证；第五小节介绍了多语言的支持，beego中集成了go-i18n这个多语言包，用户可以很方便的利用该库开发多语言的Web应用；第六小节介绍了如何集成Go的pprof包，pprof包是用于性能调试的工具，通过对beego的改造之后集成了pprof包，使得用户可以利用pprof测试基于beego开发的应用，通过这六个小节的介绍我们扩展出来了一个比较强壮的beego框架，这个框架足以应付目前大多数的Web应用，用户可以继续发挥自己的想象力去扩展，我这里只是简单的介绍了我能想的到的几个比较重要的扩展。",-1),_=e("h2",{id:"links",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#links","aria-hidden":"true"},"#"),o(" links")],-1);function b(h,u){const t=n("RouterLink");return i(),l("div",null,[d,p,_,e("ul",null,[e("li",null,[a(t,{to:"/build-web-app/preface.html"},{default:s(()=>[o("目录")]),_:1})]),e("li",null,[o("上一节: "),a(t,{to:"/build-web-app/14.6.html"},{default:s(()=>[o("pprof支持")]),_:1})])])])}const m=r(c,[["render",b],["__file","14.7.html.vue"]]);export{m as default};
