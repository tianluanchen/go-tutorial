import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as c,o as p,c as l,a as s,d as e,w as t,b as n,e as i}from"./app-9da01d16.js";const u={},d=i(`<h1 id="_6-10-使用闭包调试" tabindex="-1"><a class="header-anchor" href="#_6-10-使用闭包调试" aria-hidden="true">#</a> 6.10 使用闭包调试</h1><p>当您在分析和调试复杂的程序时，无数个函数在不同的代码文件中相互调用，如果这时候能够准确地知道哪个文件中的具体哪个函数正在执行，对于调试是十分有帮助的。您可以使用 <code>runtime</code> 或 <code>log</code> 包中的特殊函数来实现这样的功能。包 <code>runtime</code> 中的函数 <code>Caller()</code> 提供了相应的信息，因此可以在需要的时候实现一个 <code>where()</code> 闭包函数来打印函数执行的位置：</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>where <span class="token operator">:=</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token boolean">_</span><span class="token punctuation">,</span> file<span class="token punctuation">,</span> line<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> runtime<span class="token punctuation">.</span><span class="token function">Caller</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
	log<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;%s:%d&quot;</span><span class="token punctuation">,</span> file<span class="token punctuation">,</span> line<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">// some code</span>
<span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">// some more code</span>
<span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>您也可以设置 <code>log</code> 包中的 <code>flag</code> 参数来实现：</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>log<span class="token punctuation">.</span><span class="token function">SetFlags</span><span class="token punctuation">(</span>log<span class="token punctuation">.</span>Llongfile<span class="token punctuation">)</span>
log<span class="token punctuation">.</span><span class="token function">Print</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>或使用一个更加简短版本的 <code>where()</code> 函数：</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">var</span> where <span class="token operator">=</span> log<span class="token punctuation">.</span>Print
<span class="token keyword">func</span> <span class="token function">func1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token operator">...</span> some code
<span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token operator">...</span> some code
<span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="链接" tabindex="-1"><a class="header-anchor" href="#链接" aria-hidden="true">#</a> 链接</h2>`,8);function r(k,m){const a=c("RouterLink");return p(),l("div",null,[d,s("ul",null,[s("li",null,[e(a,{to:"/the-way-to-go/directory.html"},{default:t(()=>[n("目录")]),_:1})]),s("li",null,[n("上一节："),e(a,{to:"/the-way-to-go/06.9.html"},{default:t(()=>[n("应用闭包：将函数作为返回值")]),_:1})]),s("li",null,[n("下一节："),e(a,{to:"/the-way-to-go/06.11.html"},{default:t(()=>[n("计算函数执行时间")]),_:1})])])])}const h=o(u,[["render",r],["__file","06.10.html.vue"]]);export{h as default};
