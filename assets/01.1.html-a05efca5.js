import{_ as c}from"./1.1.mac-a5340d0a.js";import{_ as r}from"./plugin-vue_export-helper-c27b6911.js";import{r as l,o as p,c as d,a,b as n,d as e,w as t,e as o}from"./app-9da01d16.js";const u="/go-tutorial/assets/1.1.mac-2a6a7b6e.png?raw=true",g={},h=a("h1",{id:"_1-1安装-go",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#_1-1安装-go","aria-hidden":"true"},"#"),n(" 1.1安装 Go")],-1),b=a("h2",{id:"go的三种安装方式",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#go的三种安装方式","aria-hidden":"true"},"#"),n(" Go的三种安装方式")],-1),m=a("p",null,"Go有多种安装方式，你可以选择自己喜欢的。这里我们介绍三种最常见的安装方式：",-1),v=a("ul",null,[a("li",null,[n("Go标准包安装：Go提供了方便的安装包，支持Windows、Linux、Mac等系统。这种方式适合快速安装，可根据自己的系统位数下载好相应的安装包，一路 next 就可以轻松安装了。"),a("strong",null,"推荐这种方式")]),a("li",null,"第三方工具安装：目前有很多方便的第三方软件包工具，例如 Ubuntu 的 apt-ge t和 wget、Mac 的 homebrew 等。这种安装方式适合那些熟悉相应系统的用户。"),a("li",null,"Go源码安装：这是一种标准的软件安装方式。对于经常使用Unix类系统的用户，尤其对于开发者来说，从源码安装可以自己定制。")],-1),k={href:"https://github.com/moovweb/gvm",target:"_blank",rel:"noopener noreferrer"},f=o(`<h2 id="go标准包安装" tabindex="-1"><a class="header-anchor" href="#go标准包安装" aria-hidden="true">#</a> Go标准包安装</h2><p>Go 提供了每个平台打好包的一键安装，这些包默认会安装到如下目录：/usr/local/go (Windows系统：c:\\Go)，当然你可以改变他们的安装位置，但是改变之后你必须在你的环境变量中设置如下信息：</p><pre><code>export GOROOT=$HOME/go  
export GOPATH=$HOME/gopath (可选配置)
export PATH=$PATH:$GOROOT/bin:$GOPATH/bin
</code></pre><p>上面这些命令对于Mac和Unix用户来说最好是写入<code>.bashrc</code>或者<code>.zshrc</code>文件，对于windows用户来说当然是写入环境变量。</p><h3 id="如何判断自己的操作系统是32位还是64位-建议直接跳过-现在操作系统一般都是-64位" tabindex="-1"><a class="header-anchor" href="#如何判断自己的操作系统是32位还是64位-建议直接跳过-现在操作系统一般都是-64位" aria-hidden="true">#</a> 如何判断自己的操作系统是32位还是64位？(建议直接跳过, 现在操作系统一般都是 64位)</h3><p>我们接下来的Go安装需要判断操作系统的位数，所以这小节我们先确定自己的系统类型。</p><p>Windows系统用户请按Win+R运行cmd，输入<code>systeminfo</code>后回车，稍等片刻，会出现一些系统信息。在“系统类型”一行中，若显示“x64-based PC”，即为64位系统；若显示“X86-based PC”，则为32位系统。</p><p>Mac系统用户建议直接使用64位的，因为Go所支持的Mac OS X版本已经不支持纯32位处理器了。</p><p>Linux系统用户可通过在Terminal中执行命令<code>arch</code>(即<code>uname -m</code>)来查看系统信息：</p><p>64位系统显示<br> x86_64</p><p>32位系统显示<br> i386</p><h3 id="mac-安装" tabindex="-1"><a class="header-anchor" href="#mac-安装" aria-hidden="true">#</a> Mac 安装</h3>`,12),_={href:"http://golang.org/dl/",title:"Go安装包下载",target:"_blank",rel:"noopener noreferrer"},x=a("code",null,"~/go/bin",-1),G=a("code",null,"go",-1),O=a("br",null,null,-1),w=a("p",null,"看到类似上面源码安装成功的图片说明已经安装成功",-1),T=a("p",null,"如果出现go的Usage信息，那么说明go已经安装成功了；如果出现该命令不存在，那么可以检查一下自己的PATH环境变中是否包含了go的安装目录。",-1),H=a("h3",{id:"linux-安装",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#linux-安装","aria-hidden":"true"},"#"),n(" Linux 安装")],-1),P={href:"http://golang.org/dl/",title:"Go安装包下载",target:"_blank",rel:"noopener noreferrer"},A=o('<p>直接使用 <code>tar -C /usr/local -xzf go1.4.7.linux-amd64.tar.gz</code> 解压到 local 目录<br> 设置PATH，<code>export PATH=$PATH:/usr/local/go/bin</code></p><p>假定你想要安装Go的目录为 <code>$GO_INSTALL_DIR</code>，后面替换为相应的目录路径。<br> 解压缩<code>tar.gz</code>包到安装目录下：<code>tar zxvf go1.14.7.linux-amd64.tar.gz -C $GO_INSTALL_DIR</code>。</p><p>设置PATH，<code>export PATH=$PATH:$GO_INSTALL_DIR/go/bin</code></p><p>然后执行<code>go</code></p><figure><img src="'+u+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>图1.2 Linux系统下安装成功之后执行go显示的信息</p><p>如果出现go的Usage信息，那么说明go已经安装成功了；如果出现该命令不存在，那么可以检查一下自己的PATH环境变中是否包含了go的安装目录。</p><h3 id="windows-安装" tabindex="-1"><a class="header-anchor" href="#windows-安装" aria-hidden="true">#</a> Windows 安装</h3>',8),$={href:"http://golang.org/dl/",title:"Go安装包下载",target:"_blank",rel:"noopener noreferrer"},M=a("code",null,"C:\\Go\\bin\\",-1),L=a("code",null,"C:\\Go\\",-1),R=o(`<p><strong>验证是否安装成功</strong></p><p>在运行中输入 <code>cmd</code> 打开命令行工具，在提示符下输入 <code>go</code>，检查是否能看到 Usage 信息。输入 <code>cd %GOROOT%</code>，看是否能进入 Go 安装目录。若都成功，说明安装成功。</p><p>不能的话请检查上述环境变量 Path 和 GOROOT 的值。若不存在请卸载后重新安装，存在请重启计算机后重试以上步骤。</p><h2 id="第三方工具安装" tabindex="-1"><a class="header-anchor" href="#第三方工具安装" aria-hidden="true">#</a> 第三方工具安装</h2><h3 id="gvm" tabindex="-1"><a class="header-anchor" href="#gvm" aria-hidden="true">#</a> GVM</h3><p>gvm是第三方开发的Go多版本管理工具，类似ruby里面的rvm工具。使用起来相当的方便，安装gvm使用如下命令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>
<span class="token function">bash</span> <span class="token operator">&lt;</span> <span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token function">curl</span> <span class="token parameter variable">-s</span> <span class="token parameter variable">-S</span> <span class="token parameter variable">-L</span> https://raw.githubusercontent.com/moovweb/gvm/master/binscripts/gvm-installer<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>安装完成后我们就可以安装go了：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>
gvm <span class="token function">install</span> go1.14.7
gvm use go1.14.7
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>也可以使用下面的命令，省去每次调用gvm use的麻烦：<br> gvm use go1.14.7 --default</p><p>执行完上面的命令之后GOPATH、GOROOT等环境变量会自动设置好，这样就可以直接使用了。</p><h3 id="apt-get" tabindex="-1"><a class="header-anchor" href="#apt-get" aria-hidden="true">#</a> apt-get</h3><p>Ubuntu是目前使用最多的Linux桌面系统，使用<code>apt-get</code>命令来管理软件包，我们可以通过下面的命令来安装Go，为了以后方便，应该把 <code>git</code> <code>mercurial</code> 也安装上：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>
<span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> python-software-properties
<span class="token function">sudo</span> add-apt-repository ppa:gophers/go
<span class="token function">sudo</span> <span class="token function">apt-get</span> update
<span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> golang-stable git-core mercurial
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="wget" tabindex="-1"><a class="header-anchor" href="#wget" aria-hidden="true">#</a> wget</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>
<span class="token function">wget</span> https://storage.googleapis.com/golang/go1.14.7.linux-amd64.tar.gz
或 <span class="token function">wget</span> https://dl.google.com/go/go1.14.7.linux-amd64.tar.gz

<span class="token function">sudo</span> <span class="token function">tar</span> <span class="token parameter variable">-xzf</span> go1.14.7.linux-amd64.tar.gz <span class="token parameter variable">-C</span> /usr/local 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>配置环境变量:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>
<span class="token builtin class-name">export</span> <span class="token assign-left variable">GOROOT</span><span class="token operator">=</span>/usr/local/go
<span class="token builtin class-name">export</span> <span class="token assign-left variable">GOBIN</span><span class="token operator">=</span><span class="token variable">$GOROOT</span>/bin
<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token environment constant">$PATH</span><span class="token builtin class-name">:</span><span class="token variable">$GOBIN</span>
<span class="token builtin class-name">export</span> <span class="token assign-left variable">GOPATH</span><span class="token operator">=</span><span class="token environment constant">$HOME</span>/gopath <span class="token punctuation">(</span>可选设置<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>或者使用:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">vim</span> /etc/profile 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>并添加下面的内容：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">export</span> <span class="token assign-left variable">GOROOT</span><span class="token operator">=</span>/usr/local/go
<span class="token builtin class-name">export</span> <span class="token assign-left variable">GOBIN</span><span class="token operator">=</span><span class="token variable">$GOROOT</span>/bin
<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token environment constant">$PATH</span><span class="token builtin class-name">:</span><span class="token variable">$GOBIN</span>
<span class="token builtin class-name">export</span> <span class="token assign-left variable">GOPATH</span><span class="token operator">=</span><span class="token environment constant">$HOME</span>/gopath <span class="token punctuation">(</span>可选设置<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>重新加载 profile 文件</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">source</span> /etc/profile 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="homebrew" tabindex="-1"><a class="header-anchor" href="#homebrew" aria-hidden="true">#</a> homebrew</h3><p>homebrew是Mac系统下面目前使用最多的管理软件的工具，目前已支持Go，可以通过命令直接安装Go，为了以后方便，应该把 <code>git</code> <code>mercurial</code> 也安装上：</p><p>1.安装homebrew</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>/usr/bin/ruby <span class="token parameter variable">-e</span> <span class="token string">&quot;<span class="token variable"><span class="token variable">$(</span><span class="token function">curl</span> <span class="token parameter variable">-fsSL</span> https://raw.githubusercontent.com/Homebrew/install/master/install<span class="token variable">)</span></span>&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>2.安装go</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>
brew update <span class="token operator">&amp;&amp;</span> brew upgrade
brew <span class="token function">install</span> go
brew <span class="token function">install</span> <span class="token function">git</span>
brew <span class="token function">install</span> mercurial // 可选安装
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="go源码安装" tabindex="-1"><a class="header-anchor" href="#go源码安装" aria-hidden="true">#</a> Go源码安装</h2><p>Go 1.5彻底移除 C 代码，Runtime、Compiler、Linker均由Go编写,实现自举。只需要安装了上一个版本,即可从源码安装。</p><p>在Go 1.5前,Go的源代码中，有些部分是用Plan 9 C和AT&amp;T汇编写的，因此假如你要想从源码安装，就必须安装C的编译工具。</p><p>在Mac系统中，只要你安装了Xcode，就已经包含了相应的编译工具。</p><p>在类Unix系统中，需要安装gcc等工具。例如Ubuntu系统可通过在终端中执行<code>sudo apt-get install gcc libc6-dev</code>来安装编译工具。</p><p>在 Windows 系统中，你需要安装 MinGW，然后通过 MinGW 安装 gcc，并设置相应的环境变量。</p>`,36),z={href:"http://golang.org/dl/",target:"_blank",rel:"noopener noreferrer"},E=a("code",null,"goVERSION.src.tar.gz",-1),C=a("code",null,"$HOME",-1),I=o(`<pre><code>cd go/src
./all.bash
</code></pre><p>运行all.bash后出现&quot;ALL TESTS PASSED&quot;字样时才算安装成功。</p><p>上面是Unix风格的命令，Windows下的安装方式类似，只不过是运行<code>all.bat</code>，调用的编译器是MinGW的gcc。</p><p>如果是Mac或者Unix用户需要设置几个环境变量，如果想重启之后也能生效的话把下面的命令写到<code>.bashrc</code>或者<code>.zshrc</code>里面，</p><pre><code>export GOPATH=$HOME/gopath
export PATH=$PATH:$HOME/go/bin:$GOPATH/bin
</code></pre><p>如果你是写入文件的，记得执行<code>bash .bashrc</code>或者<code>bash .zshrc</code>使得设置立马生效。</p><p>如果是window系统，就需要设置环境变量，在path里面增加相应的go所在的目录，设置gopath变量。</p><p>当你设置完毕之后在命令行里面输入<code>go</code>，看到如下图片即说明你已经安装成功</p><figure><img src="`+c+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>图1.1 源码安装之后执行Go命令的图</p><p>如果出现Go的Usage信息，那么说明Go已经安装成功了；如果出现该命令不存在，那么可以检查一下自己的PATH环境变中是否包含了Go的安装目录。</p><p>从go 1.8开始，GOPATH 环境变量现在有一个默认值，如果它没有被设置。 它在Unix上默认为$HOME/go,在Windows上默认为%USERPROFILE%/go。<br> 从 Go1.11 开始, Go 官方加入了 Go Module 支持.</p><blockquote><p>关于上面的 GO Module 和 GOPATH 将在下面小节详细讲解</p></blockquote><h2 id="links" tabindex="-1"><a class="header-anchor" href="#links" aria-hidden="true">#</a> links</h2>',14);function U(S,N){const s=l("ExternalLinkIcon"),i=l("RouterLink");return p(),d("div",null,[h,b,m,v,a("p",null,[n("最后，如果你想在同一个系统中安装多个版本的Go，你可以参考第三方工具"),a("a",k,[n("GVM"),e(s)]),n("，这是目前在这方面做得最好的工具，除非你知道怎么处理。")]),f,a("p",null,[n("访问"),a("a",_,[n("下载地址"),e(s)]),n("，64位系统下载 go1.14.7.darwin-amd64.pkg，双击下载文件，一路默认安装点击下一步，这个时候go已经安装到你的系统中，默认已经在PATH中增加了相应的"),x,n(", 这个时候打开终端，输入"),G,O,n(" 32位系统下载go1.4.2.darwin-386-osx10.8.pkg( 新的版本已无32位下载 )")]),w,T,H,a("p",null,[n("访问"),a("a",P,[n("下载地址"),e(s)]),n("，64位系统下载go1.14.7.linux-amd64.tar.gz，32位系统下载go1.14.7.linux-386.tar.gz，")]),A,a("p",null,[n("访问"),a("a",$,[n("Golang 下载页"),e(s)]),n("，64 位请选择名称中包含 windows-amd64 的, 32 位请选择名称中包含 windows-386 的 msi 安装包。下载好后运行，不要修改默认安装目录 C:\\Go\\，若安装到其他位置会导致不能执行自己所编写的 Go 代码。安装完成后默认会在环境变量 Path 后添加 Go 安装目录下的 bin 目录 "),M,n("，并添加环境变量 GOROOT，值为 Go 安装根目录 "),L,n(" 。")]),R,a("p",null,[n("你可以直接去官网"),a("a",z,[n("下载源码"),e(s)]),n("，找相应的"),E,n("的文件下载，下载之后解压缩到"),C,n("目录，执行如下代码：")]),I,a("ul",null,[a("li",null,[e(i,{to:"/build-web-app/preface.html"},{default:t(()=>[n("目录")]),_:1})]),a("li",null,[n("上一节: "),e(i,{to:"/build-web-app/01.0.html"},{default:t(()=>[n("Go环境配置")]),_:1})]),a("li",null,[n("下一节: "),e(i,{to:"/build-web-app/01.2.html"},{default:t(()=>[n("Go Module, GOPATH 与工作空间")]),_:1})])])])}const V=r(g,[["render",U],["__file","01.1.html.vue"]]);export{V as default};
