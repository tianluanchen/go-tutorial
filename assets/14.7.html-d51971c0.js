const t=JSON.parse('{"key":"v-70aff185","path":"/the-way-to-go/14.7.html","title":"14.7 新旧模型对比：任务和 worker","lang":"zh-CN","frontmatter":{"description":"假设我们需要处理很多任务；一个 worker 处理一项任务。任务可以被定义为一个结构体（具体的细节在这里并不重要）： 旧模式：使用共享内存进行同步 由各个任务组成的任务池共享内存；为了同步各个 worker 以及避免资源竞争，我们需要对任务池进行加锁保护： sync.Mutex（参见9.3 (09.3.md)）是互斥锁：它用来在代码中保护临界区资源：同...","head":[["meta",{"property":"og:url","content":"https://tianluanchen.github.io/go-tutorial/the-way-to-go/14.7.html"}],["meta",{"property":"og:site_name","content":"Go 优选教程"}],["meta",{"property":"og:title","content":"14.7 新旧模型对比：任务和 worker"}],["meta",{"property":"og:description","content":"假设我们需要处理很多任务；一个 worker 处理一项任务。任务可以被定义为一个结构体（具体的细节在这里并不重要）： 旧模式：使用共享内存进行同步 由各个任务组成的任务池共享内存；为了同步各个 worker 以及避免资源竞争，我们需要对任务池进行加锁保护： sync.Mutex（参见9.3 (09.3.md)）是互斥锁：它用来在代码中保护临界区资源：同..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-16T16:30:25.000Z"}],["meta",{"property":"article:modified_time","content":"2023-09-16T16:30:25.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"14.7 新旧模型对比：任务和 worker\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-09-16T16:30:25.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"链接","slug":"链接","link":"#链接","children":[]}],"git":{"updatedTime":1694881825000,"contributors":[{"name":"tianluanchen","email":"zxl-life@outlook.com","commits":1}]},"readingTime":{"minutes":4.76,"words":1429},"filePathRelative":"the-way-to-go/14.7.md","autoDesc":true,"excerpt":""}');export{t as data};
