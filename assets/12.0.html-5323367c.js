import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as l,c as s,a,d as i,w as r,b as e,e as d}from"./app-9da01d16.js";const c="/go-tutorial/assets/navi12-0a77318c.png?raw=true",h={},u=d('<h1 id="_12-部署与维护" tabindex="-1"><a class="header-anchor" href="#_12-部署与维护" aria-hidden="true">#</a> 12 部署与维护</h1><p>到目前为止，我们前面已经介绍了如何开发程序、调试程序以及测试程序，正如人们常说的：开发最后的10%需要花费90%的时间，所以这一章我们将强调这最后的10%部分，要真正成为让人信任并使用的优秀应用，需要考虑到一些细节，以上所说的10%就是指这些小细节。</p><p>本章我们将通过四个小节来介绍这些小细节的处理，第一小节介绍如何在生产服务上记录程序产生的日志，如何记录日志，第二小节介绍发生错误时我们的程序如何处理，如何保证尽量少的影响到用户的访问，第三小节介绍如何来部署Go的独立程序，由于目前Go程序还无法像C那样写成daemon，那么我们如何管理这样的进程程序后台运行呢？第四小节将介绍应用数据的备份和恢复，尽量保证应用在崩溃的情况能够保持数据的完整性。</p><h2 id="目录" tabindex="-1"><a class="header-anchor" href="#目录" aria-hidden="true">#</a> 目录</h2><figure><img src="'+c+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="links" tabindex="-1"><a class="header-anchor" href="#links" aria-hidden="true">#</a> links</h2>',6);function _(p,f){const t=o("RouterLink");return l(),s("div",null,[u,a("ul",null,[a("li",null,[i(t,{to:"/build-web-app/preface.html"},{default:r(()=>[e("目录")]),_:1})]),a("li",null,[e("上一章: "),i(t,{to:"/build-web-app/11.4.html"},{default:r(()=>[e("第十一章总结")]),_:1})]),a("li",null,[e("下一节: "),i(t,{to:"/build-web-app/12.1.html"},{default:r(()=>[e("应用日志")]),_:1})])])])}const x=n(h,[["render",_],["__file","12.0.html.vue"]]);export{x as default};
