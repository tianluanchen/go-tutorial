import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r,o as c,c as s,a as l,d as a,w as n,b as e,e as o}from"./app-9da01d16.js";const d={},u=o(`<h1 id="_2-8-总结" tabindex="-1"><a class="header-anchor" href="#_2-8-总结" aria-hidden="true">#</a> 2.8 总结</h1><p>这一章我们主要介绍了Go语言的一些语法，通过语法我们可以发现Go是多么的简单，只有二十五个关键字。让我们再来回顾一下这些关键字都是用来干什么的。</p><div class="language-Go line-numbers-mode" data-ext="Go"><pre class="language-Go"><code>
break    default      func    interface    select
case     defer        go      map          struct
chan     else         goto    package      switch
const    fallthrough  if      range        type
continue for          import  return       var
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>var和const参考2.2Go语言基础里面的变量和常量申明</li><li>package和import已经有过短暂的接触</li><li>func 用于定义函数和方法</li><li>return 用于从函数返回</li><li>defer 用于类似析构函数</li><li>go 用于并发</li><li>select 用于选择不同类型的通讯</li><li>interface 用于定义接口，参考2.6小节</li><li>struct 用于定义抽象数据类型，参考2.5小节</li><li>break、case、continue、for、fallthrough、else、if、switch、goto、default这些参考2.3流程介绍里面</li><li>chan用于channel通讯</li><li>type用于声明自定义类型</li><li>map用于声明map类型数据</li><li>range用于读取slice、map、channel数据</li></ul><p>上面这二十五个关键字记住了，那么Go你也已经差不多学会了。</p><h2 id="links" tabindex="-1"><a class="header-anchor" href="#links" aria-hidden="true">#</a> links</h2>`,6);function h(p,f){const i=r("RouterLink");return c(),s("div",null,[u,l("ul",null,[l("li",null,[a(i,{to:"/build-web-app/preface.html"},{default:n(()=>[e("目录")]),_:1})]),l("li",null,[e("上一节: "),a(i,{to:"/build-web-app/02.7.html"},{default:n(()=>[e("并发")]),_:1})]),l("li",null,[e("下一章: "),a(i,{to:"/build-web-app/03.0.html"},{default:n(()=>[e("Web基础")]),_:1})])])])}const v=t(d,[["render",h],["__file","02.8.html.vue"]]);export{v as default};
