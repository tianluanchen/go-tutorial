import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{r,o as s,c as _,a as e,d as a,w as l,b as t}from"./app-9da01d16.js";const c={},d=e("h1",{id:"_16-7-使用值类型时误用指针",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_16-7-使用值类型时误用指针","aria-hidden":"true"},"#"),t(" 16.7 使用值类型时误用指针")],-1),i=e("p",null,"将一个值类型作为一个参数传递给函数或者作为一个方法的接收者，似乎是对内存的滥用，因为值类型一直是传递拷贝。但是另一方面，值类型的内存是在栈上分配，内存分配快速且开销不大。如果你传递一个指针，而不是一个值类型，Go 编译器大多数情况下会认为需要创建一个对象，并将对象移动到堆上，所以会导致额外的内存分配：因此当使用指针代替值类型作为参数传递时，我们没有任何收获。",-1),h=e("h2",{id:"链接",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#链接","aria-hidden":"true"},"#"),t(" 链接")],-1);function u(f,m){const o=r("RouterLink");return s(),_("div",null,[d,i,h,e("ul",null,[e("li",null,[a(o,{to:"/the-way-to-go/directory.html"},{default:l(()=>[t("目录")]),_:1})]),e("li",null,[t("上一节："),a(o,{to:"/the-way-to-go/16.6.html"},{default:l(()=>[t("使用指针指向接口类型")]),_:1})]),e("li",null,[t("下一节："),a(o,{to:"/the-way-to-go/16.8.html"},{default:l(()=>[t("误用协程和通道")]),_:1})])])])}const w=n(c,[["render",u],["__file","16.7.html.vue"]]);export{w as default};
