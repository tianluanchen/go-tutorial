import{_ as l}from"./plugin-vue_export-helper-c27b6911.js";import{r as c,o as r,c as n,a as o,d as a,w as d,b as e,e as i}from"./app-9da01d16.js";const s={},h=i('<h1 id="_3-4-构建并运行-go-程序" tabindex="-1"><a class="header-anchor" href="#_3-4-构建并运行-go-程序" aria-hidden="true">#</a> 3.4 构建并运行 Go 程序</h1><p>在大多数 IDE 中，每次构建程序之前都会自动调用源码格式化工具 <code>gofmt</code> 并保存格式化后的源文件。如果构建成功则不会输出任何信息，而当发生编译时错误时，则会指明源码中具体第几行出现了什么错误，如：<code>a declared and not used</code>。一般情况下，你可以双击 IDE 中的错误信息直接跳转到发生错误的那一行。</p><p>如果程序执行一切顺利并成功退出后，将会在控制台输出 <code>Program exited with code 0</code>。</p><p>从 Go 1 版本开始，使用 Go 自带的更加方便的工具来构建应用程序：</p><ul><li><code>go build</code> 编译自身包和依赖包</li><li><code>go install</code> 编译并安装自身包和依赖包</li></ul><h2 id="链接" tabindex="-1"><a class="header-anchor" href="#链接" aria-hidden="true">#</a> 链接</h2>',6);function _(u,m){const t=c("RouterLink");return r(),n("div",null,[h,o("ul",null,[o("li",null,[a(t,{to:"/the-way-to-go/directory.html"},{default:d(()=>[e("目录")]),_:1})]),o("li",null,[e("上一节："),a(t,{to:"/the-way-to-go/03.3.html"},{default:d(()=>[e("调试器")]),_:1})]),o("li",null,[e("下一节："),a(t,{to:"/the-way-to-go/03.5.html"},{default:d(()=>[e("格式化代码")]),_:1})])])])}const g=l(s,[["render",_],["__file","03.4.html.vue"]]);export{g as default};
