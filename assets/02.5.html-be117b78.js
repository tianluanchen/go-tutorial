const e=JSON.parse('{"key":"v-1f37c151","path":"/build-web-app/02.5.html","title":"2.5 面向对象","lang":"zh-CN","frontmatter":{"description":"前面两章我们介绍了函数和struct，那你是否想过函数当作struct的字段一样来处理呢？今天我们就讲解一下函数的另一种形态，带有接收者的函数，我们称为method method 现在假设有这么一个场景，你定义了一个struct叫做长方形，你现在想要计算他的面积，那么按照我们一般的思路应该会用下面的方式来实现这段代码可以计算出来长方形的面积，但是are...","head":[["meta",{"property":"og:url","content":"https://tianluanchen.github.io/go-tutorial/build-web-app/02.5.html"}],["meta",{"property":"og:site_name","content":"Go 优选教程"}],["meta",{"property":"og:title","content":"2.5 面向对象"}],["meta",{"property":"og:description","content":"前面两章我们介绍了函数和struct，那你是否想过函数当作struct的字段一样来处理呢？今天我们就讲解一下函数的另一种形态，带有接收者的函数，我们称为method method 现在假设有这么一个场景，你定义了一个struct叫做长方形，你现在想要计算他的面积，那么按照我们一般的思路应该会用下面的方式来实现这段代码可以计算出来长方形的面积，但是are..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-16T16:30:25.000Z"}],["meta",{"property":"article:modified_time","content":"2023-09-16T16:30:25.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"2.5 面向对象\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-09-16T16:30:25.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"method","slug":"method","link":"#method","children":[{"level":3,"title":"指针作为receiver","slug":"指针作为receiver","link":"#指针作为receiver","children":[]},{"level":3,"title":"method继承","slug":"method继承","link":"#method继承","children":[]},{"level":3,"title":"method重写","slug":"method重写","link":"#method重写","children":[]}]},{"level":2,"title":"links","slug":"links","link":"#links","children":[]}],"git":{"updatedTime":1694881825000,"contributors":[{"name":"tianluanchen","email":"zxl-life@outlook.com","commits":1}]},"readingTime":{"minutes":8.9,"words":2669},"filePathRelative":"build-web-app/02.5.md","autoDesc":true,"excerpt":""}');export{e as data};
