const t=JSON.parse('{"key":"v-f537d4de","path":"/build-web-app/03.4.html","title":"3.4 Go的http包详解","lang":"zh-CN","frontmatter":{"description":"前面小节介绍了Go怎么样实现了Web工作模式的一个流程，这一小节，我们将详细地解剖一下http包，看它到底是怎样实现整个过程的。 Go的http有两个核心功能：Conn、ServeMux Conn的goroutine 与我们一般编写的http服务器不同, Go为了实现高并发和高性能, 使用了goroutines来处理Conn的读写事件, 这样每个请求都...","head":[["meta",{"property":"og:url","content":"https://tianluanchen.github.io/go-tutorial/build-web-app/03.4.html"}],["meta",{"property":"og:site_name","content":"Go 优选教程"}],["meta",{"property":"og:title","content":"3.4 Go的http包详解"}],["meta",{"property":"og:description","content":"前面小节介绍了Go怎么样实现了Web工作模式的一个流程，这一小节，我们将详细地解剖一下http包，看它到底是怎样实现整个过程的。 Go的http有两个核心功能：Conn、ServeMux Conn的goroutine 与我们一般编写的http服务器不同, Go为了实现高并发和高性能, 使用了goroutines来处理Conn的读写事件, 这样每个请求都..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-16T16:30:25.000Z"}],["meta",{"property":"article:modified_time","content":"2023-09-16T16:30:25.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"3.4 Go的http包详解\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-09-16T16:30:25.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Conn的goroutine","slug":"conn的goroutine","link":"#conn的goroutine","children":[]},{"level":2,"title":"ServeMux的自定义","slug":"servemux的自定义","link":"#servemux的自定义","children":[]},{"level":2,"title":"Go代码的执行流程","slug":"go代码的执行流程","link":"#go代码的执行流程","children":[]},{"level":2,"title":"links","slug":"links","link":"#links","children":[]}],"git":{"updatedTime":1694881825000,"contributors":[{"name":"tianluanchen","email":"zxl-life@outlook.com","commits":1}]},"readingTime":{"minutes":4.66,"words":1397},"filePathRelative":"build-web-app/03.4.md","autoDesc":true,"excerpt":""}');export{t as data};
