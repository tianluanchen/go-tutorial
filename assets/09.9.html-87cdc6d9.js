import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{r as c,o as d,c as u,a as t,b as e,d as o,w as l,e as r}from"./app-9da01d16.js";const h={},s=t("h1",{id:"_9-9-通过-git-打包和安装",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#_9-9-通过-git-打包和安装","aria-hidden":"true"},"#"),e(" 9.9 通过 Git 打包和安装")],-1),_=t("h2",{id:"_9-9-1-安装到-github",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#_9-9-1-安装到-github","aria-hidden":"true"},"#"),e(" 9.9.1 安装到 GitHub")],-1),p=t("p",null,"以上的方式对于本地包来说是可以的，但是我们如何打包代码到开发者圈子呢？那么我们需要一个云端的源码的版本控制系统，比如著名的 Git。",-1),g={href:"http://help.github.com/win-set-up-git/",target:"_blank",rel:"noopener noreferrer"},m=t("code",null,"uc",-1),N=t("p",null,[e("进入到 "),t("code",null,"uc"),e(" 包目录下并创建一个 Git 仓库在里面: "),t("code",null,"git init"),e("。")],-1),b=t("p",null,[e("信息提示: "),t("code",null,"Initialized empty git repository in $PWD/uc"),e("。")],-1),f={href:"http://README.md",target:"_blank",rel:"noopener noreferrer"},G=t("ul",null,[t("li",null,[e("添加所有文件到仓库："),t("code",null,"git add README.md uc.go uc_test.go Makefile"),e("。")]),t("li",null,[e("标记为第一个版本："),t("code",null,'git commit -m "initial rivision"'),e("。")])],-1),x={href:"https://github.com",target:"_blank",rel:"noopener noreferrer"},k={href:"http://help.github.com/",target:"_blank",rel:"noopener noreferrer"},v=r(`<p>在云端创建一个新的 uc 仓库;发布的指令为（<code>NNNN</code> 替代用户名）:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>git remote add origin git@github.com:NNNN/uc.git  
git push -u origin master
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>操作完成后检查 GitHub 上的包页面: <code>http://github.com/NNNN/uc</code>。</p><h2 id="_9-9-2-从-github-安装" tabindex="-1"><a class="header-anchor" href="#_9-9-2-从-github-安装" aria-hidden="true">#</a> 9.9.2 从 GitHub 安装</h2><p>如果有人想安装您的远端项目到本地机器，打开终端并执行（<code>NNNN</code> 是你在 GitHub 上的用户名）：<code>go get github.com/NNNN/uc</code>。</p><p>这样现在这台机器上的其他 Go 应用程序也可以通过导入路径：<code>&quot;github.com/NNNN/uc&quot;</code> 代替 <code>&quot;./uc/uc&quot;</code> 来使用。</p><p>也可以将其缩写为：<code>import uc &quot;github.com/NNNN/uc&quot;</code>。</p><p>然后修改 Makefile: 将 <code>TARG=uc</code> 替换为 <code>TARG=github.com/NNNN/uc</code>。</p><p>Gomake（和 go install）将通过 <code>$GOPATH</code> 下的本地版本进行工作。</p><p>网站和版本控制系统的其他的选择(括号中为网站所使用的版本控制系统)：</p><ul><li>BitBucket(hg/Git)</li><li>GitHub(Git)</li><li>Google Code(hg/Git/svn)</li><li>Launchpad(bzr)</li></ul><p>版本控制系统可以选择你熟悉的或者本地使用的代码版本控制。Go 核心代码的仓库是使用 Mercurial(hg) 来控制的，所以它是一个最可能保证你可以得到开发者项目中最好的软件。Git 也很出名，同样也适用。如果你从未使用过版本控制，这些网站有一些很好的帮助并且你可以通过在谷歌搜索 &quot;{name} tutorial&quot;（name为你想要使用的版本控制系统）得到许多很好的教程。</p><h2 id="链接" tabindex="-1"><a class="header-anchor" href="#链接" aria-hidden="true">#</a> 链接</h2>`,13);function E(q,w){const i=c("ExternalLinkIcon"),n=c("RouterLink");return d(),u("div",null,[s,_,p,t("p",null,[e("在 Linux 和 OS X 的机器上 Git 是默认安装的，在 Windows 上你必须先自行安装，参见 "),t("a",g,[e("GitHub 帮助页面"),o(i)]),e("。")]),t("p",null,[e("这里将通过为"),o(n,{to:"/the-way-to-go/09.8.html"},{default:l(()=>[e("第 9.8 节")]),_:1}),e("中的 "),m,e(" 包创建一个 git 仓库作为演示")]),N,b,t("p",null,[e("每一个 Git 项目都需要一个对包进行描述的 "),t("a",f,[e("README.md"),o(i)]),e(" 文件，所以需要打开你的文本编辑器（gedit、notepad 或 LiteIde）并添加一些说明进去。")]),G,t("p",null,[e("现在必须登录 "),t("a",x,[e("GitHub 网站"),o(i)]),e("。")]),t("p",null,[e("如果您还没有账号，可以去注册一个开源项目的免费帐号。输入正确的帐号密码和有效的邮箱地址并进一步创建用户。然后你将获得一个 Git 命令的列表。本地仓库的操作命令已经完成。一个优秀的系统在你遇到任何问题的时候将 "),t("a",k,[e("引导你"),o(i)]),e("。")]),v,t("ul",null,[t("li",null,[o(n,{to:"/the-way-to-go/directory.html"},{default:l(()=>[e("目录")]),_:1})]),t("li",null,[e("上一节："),o(n,{to:"/the-way-to-go/09.8.html"},{default:l(()=>[e("自定义包的目录结构、go install 和 go test")]),_:1})]),t("li",null,[e("下一节："),o(n,{to:"/the-way-to-go/09.10.html"},{default:l(()=>[e("Go 的外部包和项目")]),_:1})])])])}const L=a(h,[["render",E],["__file","09.9.html.vue"]]);export{L as default};
