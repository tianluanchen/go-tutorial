import{_ as d}from"./plugin-vue_export-helper-c27b6911.js";import{r as n,o as i,c as a,a as e,b as t,d as l,w as c,e as r}from"./app-9da01d16.js";const s={},_=e("h1",{id:"_3-3-调试器",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_3-3-调试器","aria-hidden":"true"},"#"),t(" 3.3 调试器")],-1),h=e("p",null,"应用程序的开发过程中调试是必不可少的一个环节，因此有一个好的调试器是非常重要的，可惜的是，Go 在这方面的发展还不是很完善。目前可用的调试器是 gdb，最新版均以内置在集成开发环境 LiteIDE 和 GoClipse 中，但是该调试器的调试方式并不灵活且操作难度较大。",-1),u=e("p",null,"如果你不想使用调试器，你可以按照下面的一些有用的方法来达到基本调试的目的：",-1),f=r("<li><p>在合适的位置使用打印语句输出相关变量的值（<code>print</code>/<code>println</code> 和 <code>fmt.Print</code>/<code>fmt.Println</code>/<code>fmt.Printf</code>）。</p></li><li><p>在 <code>fmt.Printf</code> 中使用下面的说明符来打印有关变量的相关信息：</p><ul><li><code>%+v</code> 打印包括字段在内的实例的完整信息</li><li><code>%#v</code> 打印包括字段和限定类型名称在内的实例的完整信息</li><li><code>%T</code> 打印某个类型的完整说明</li></ul></li>",2),p=e("code",null,"panic()",-1),m=e("code",null,"panic()",-1),w=e("code",null,"defer",-1),x=e("h2",{id:"链接",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#链接","aria-hidden":"true"},"#"),t(" 链接")],-1);function g(y,v){const o=n("RouterLink");return i(),a("div",null,[_,h,u,e("ol",null,[f,e("li",null,[e("p",null,[t("使用 "),p,t(" 语句（"),l(o,{to:"/the-way-to-go/13.2.html"},{default:c(()=>[t("第 13.2 节")]),_:1}),t("）来获取栈跟踪信息（直到 "),m,t(" 时所有被调用函数的列表）。")])]),e("li",null,[e("p",null,[t("使用关键字 "),w,t(" 来跟踪代码执行过程（"),l(o,{to:"/the-way-to-go/06.4.html"},{default:c(()=>[t("第 6.4 节")]),_:1}),t("）。")])])]),x,e("ul",null,[e("li",null,[l(o,{to:"/the-way-to-go/directory.html"},{default:c(()=>[t("目录")]),_:1})]),e("li",null,[t("上一节："),l(o,{to:"/the-way-to-go/03.2.html"},{default:c(()=>[t("编辑器和集成开发环境")]),_:1})]),e("li",null,[t("下一节："),l(o,{to:"/the-way-to-go/03.4.html"},{default:c(()=>[t("构建并运行 Go 程序")]),_:1})])])])}const N=d(s,[["render",g],["__file","03.3.html.vue"]]);export{N as default};
